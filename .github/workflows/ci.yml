name: CI

on: 
  push:
    branches:
      - master

jobs:

  Apple:
    name: Test ${{ matrix.targets.destination }}
    runs-on: macOS-latest
    strategy:
      matrix:
        targets:
          - {destination: 'platform=macOS', scheme: 'WIPFoundation macOS'}
          - {destination: 'platform=iOS Simulator,name=iPhone 8', scheme: 'WIPFoundation iOS'}
          - {destination: 'platform=tvOS Simulator,name=Apple TV', scheme: 'WIPFoundation tvOS'}
        swift-version: [5.5]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: bundler-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle setup
        run: bundle config path vendor/bundle
      - name: Bundle install
        if: steps.bundler-cache.outputs.cache-hit != 'true'
        run: bundle install --jobs 4 --retry 3
      - name: Run tests
        env:
          DESTINATION: ${{ matrix.targets.destination }}
          SWIFT_VERSION: ${{ matrix.swift-version }}
          SCHEME: ${{ matrix.targets.scheme }}
        run: bundle exec fastlane tests_ci

  Linux:
    name: Build & Test for Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Swift
        uses: sersoft-gmbh/swifty-linux-action@v2
        with:
          release-version: 5.5
      - name: Build Linux
        run: |
          swift build
          swift test