name: CI

on: 
  push:
    branches:
      - master

jobs:

  tests:
    name: Test ${{ matrix.targets.destination }}
    runs-on: macOS-latest
    strategy:
      matrix:
        targets:
          - {destination: 'platform=macOS', scheme: 'WIPFoundation macOS'}
          - {destination: 'platform=iOS Simulator,name=iPhone 8', scheme: 'WIPFoundation iOS'}
          - {destination: 'platform=tvOS Simulator,name=Apple TV', scheme: 'WIPFoundation tvOS'}
          - {destination: 'platform=watchOS Simulator,name=Apple Watch Series 5 - 40mm', scheme: 'WIPFoundation watchOS'}
        swift-version: [5.0]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        id: bundler-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle setup
        run: bundle config path vendor/bundle
      - name: Bundle install
        if: steps.bundler-cache.outputs.cache-hit != 'true'
        run: bundle install --jobs 4 --retry 3
      - name: Run tests
        env:
          DESTINATION: ${{ matrix.targets.destination }}
          SWIFT_VERSION: ${{ matrix.swift-version }}
          SCHEME: ${{ matrix.targets.scheme }}
        run: bundle exec fastlane tests_ci

  # iOS:
  #   name: Test iOS
  #   runs-on: macOS-10.15
  #   env:
  #     DEVELOPER_DIR: /Applications/Xcode_12.4.app/Contents/Developer
  #   strategy:
  #     matrix:
  #       destination: ["OS=14.4,name=iPhone 12 Pro"]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: iOS - ${{ matrix.destination }}
  #       run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project "WIPFoundation.xcodeproj" -scheme "WIPFoundation iOS" -destination "${{ matrix.destination }}" clean test | xcpretty

  # macOS_5_3:
  #   name: Test macOS (Swift 5.3)
  #   runs-on: macOS-10.15
  #   env:
  #     DEVELOPER_DIR: /Applications/Xcode_12.1.app/Contents/Developer
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: macOS (Swift 5.3)
  #       run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project "WIPFoundation.xcodeproj" -scheme "WIPFoundation macOS" -destination "platform=macOS" clean test | xcpretty
  
  # macOS_5_4:
  #   name: Test macOS (Swift 5.4)
  #   runs-on: macOS-10.15 
  #   env:
  #     DEVELOPER_DIR: /Applications/Xcode_12.5.app/Contents/Developer
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: macOS (Swift 5.4)
  #       run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project "WIPFoundation.xcodeproj" -scheme "WIPFoundation macOS" -destination "platform=macOS" clean test | xcpretty

  # tvOS:
  #   name: Test tvOS 
  #   runs-on: macOS-10.15
  #   env: 
  #     DEVELOPER_DIR: /Applications/Xcode_12.4.app/Contents/Developer
  #   strategy:
  #     matrix:
  #       destination: ["OS=14.3,name=Apple TV 4K"]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: tvOS - ${{ matrix.destination }}
  #       run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project "WIPFoundation.xcodeproj" -scheme "WIPFoundation tvOS" -destination "${{ matrix.destination }}" clean test | xcpretty

  # watchOS:
  #   name: Build watchOS
  #   runs-on: macOS-10.15
  #   env: 
  #     DEVELOPER_DIR: /Applications/Xcode_12.4.app/Contents/Developer
  #   strategy:
  #     matrix:
  #       destination: ["OS=7.2,name=Apple Watch Series 6 - 44mm"]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: watchOS - ${{ matrix.destination }}
  #       run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project "WIPFoundation.xcodeproj" -scheme "WIPFoundation watchOS" -destination "${{ matrix.destination }}" clean build | xcpretty

  # Linux:
  #   name: Build Linux
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install Swift
  #       uses: sersoft-gmbh/SwiftyActions@v1
  #       with:
  #         release-version: 5.4
  #     - name: Build Linux
  #       run: |
  #         swift build
  #         swift test